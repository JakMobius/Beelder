{
  "version": 3,
  "sources": [
    "../node_modules/browser-pack/_prelude.js",
    "../node_modules/@babel/runtime/helpers/interopRequireDefault.js",
    "../node_modules/@babel/runtime/helpers/interopRequireWildcard.js",
    "../node_modules/@babel/runtime/helpers/typeof.js",
    "action.ts",
    "base-scheme.ts",
    "beelder.ts",
    "build-cache.ts",
    "javascript-bundler/bundler.ts",
    "reference.ts",
    "scheme.ts",
    "schemes/bundle-javascript.ts",
    "schemes/copy.ts",
    "schemes/texture-atlas.ts",
    "timings.ts",
    "utils.ts",
    "index.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;",
    "var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;",
    "function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;",
    "import {BeelderActionConfig} from \"./beelder\";\nimport BeelderScheme from \"./scheme\";\nimport BeelderReference from \"./reference\";\n\n\nexport default class BeelderAction {\n\n    static readonly actionName: string;\n    scheme: BeelderScheme;\n\n    constructor(config: BeelderActionConfig, scheme: BeelderScheme) {\n        this.scheme = scheme\n    }\n\n    public getDependencies(): string[] | null {\n        return null\n    }\n\n    public getTargets(): BeelderReference[] | null {\n        return null\n    }\n\n    public async run() {\n\n    }\n\n}",
    "\nimport Action from \"./action\";\nimport {BeelderActionConfig} from \"./beelder\";\nimport BeelderScheme from \"./scheme\";\nimport BeelderReference from \"./reference\";\nimport BuildCache from \"./build-cache\";\n\nexport interface BaseActionConfig extends BeelderActionConfig {\n    source: string\n    target: string\n}\n\nexport default class BaseAction extends Action {\n\n    target: BeelderReference;\n    source: BeelderReference;\n    protected cache: BuildCache;\n\n    constructor(config: BaseActionConfig, scheme: BeelderScheme) {\n        super(config, scheme);\n\n        this.target = new BeelderReference(config.target)\n        this.source = new BeelderReference(config.source)\n        this.cache = scheme.beelder.cache.getSection((this.constructor as typeof BaseAction).actionName)\n    }\n\n    getDependencies(): string[] | null {\n        if(this.source.isDependency) {\n            return [this.source.getDependency()]\n        }\n        return null\n    }\n\n    getTargets(): BeelderReference[] | null {\n        if(this.target.definesTarget) {\n            return [this.target]\n        }\n        return null\n    }\n}",
    "import BeelderScheme, {BeelderSchemeConfig} from \"./scheme\";\nimport BundleJavascriptAction from \"./schemes/bundle-javascript\";\nimport CopyAction from \"./schemes/copy\";\nimport TextureAtlasAction from \"./schemes/texture-atlas\";\nimport BeelderAction from \"./action\";\nimport Timings from \"./timings\";\nimport BeelderReference from \"./reference\";\nimport path from \"path\";\nimport Chalk from \"chalk\"\nimport BuildCache from \"./build-cache\";\n\nexport interface BeelderActionConfig {\n    action: string\n    targetName?: string\n}\n\nexport interface BeelderConfig {\n    cacheDirectory?: string;\n    schemes: { [key: string]: BeelderSchemeConfig }\n}\n\nexport default class Beelder {\n\n    private config: BeelderConfig\n    public static actions: Map<string, typeof BeelderAction> = new Map()\n    public schemes: Map<string, BeelderScheme> = new Map()\n    public targetMap: Map<string, BeelderScheme> = new Map()\n    public referenceMap: Map<string, BeelderReference> = new Map()\n    public readonly projectRoot: string;\n    public readonly cacheDirectory: string;\n    public cache: BuildCache;\n\n    constructor(config: BeelderConfig, projectRoot?: string) {\n        this.config = config\n\n        this.projectRoot = projectRoot ?? '/'\n        this.cacheDirectory = path.resolve(this.projectRoot, config.cacheDirectory ?? \"beelder-cache\")\n        this.cache = new BuildCache(this.cacheDirectory)\n\n        this.loadSchemes()\n    }\n\n    loadSchemes(): void {\n        for(let [name, scheme] of Object.entries(this.config.schemes)) {\n            this.schemes.set(name, new BeelderScheme(name, scheme, this))\n        }\n        for(let scheme of this.schemes.values()) {\n            for(let target of scheme.getTargets()) {\n                this.targetMap.set(target.getDefinedTarget(), scheme)\n                this.referenceMap.set(target.getDefinedTarget(), target);\n            }\n        }\n    }\n\n    static registerAction(actionClass: typeof BeelderAction) {\n        this.actions.set(actionClass.actionName, actionClass);\n    }\n\n    async runScheme(schemeName: string) {\n        let scheme = this.schemes.get(schemeName)\n        if (!scheme) throw new Error(\"No such scheme: '\" + schemeName + \"'\")\n\n        let state = Timings.getStackState()\n        try {\n\n            Timings.begin(\"Building\")\n\n            let list: BeelderScheme[] = []\n            let stack: BeelderScheme[] = []\n\n            this.enqueueScheme(list, scheme, stack)\n            await this.runSchemeList(list)\n\n            Timings.end(\"Build finished\")\n\n        } catch(e) {\n            console.error(e.message)\n            Timings.setStackState(state, \"%s \" + Chalk.red(\"failed due to error\"))\n            throw e\n        }\n    }\n\n    private enqueueScheme(list: BeelderScheme[], scheme: BeelderScheme, stack: BeelderScheme[]) {\n\n        let dependencies = scheme.getDependencies()\n\n        if(stack.indexOf(scheme) != -1) {\n            let arrow = \" -> \"\n            let path = stack.slice(stack.indexOf(scheme)).map(a => a.name).join(arrow)\n            throw new Error(\"Cycle dependency: \" + path + arrow + scheme.name);\n        }\n\n        stack.push(scheme)\n\n        for(let dependencyName of dependencies) {\n            let dependency = this.targetMap.get(dependencyName)\n            if(!dependency) throw new Error(\"Scheme '\" + scheme.name + \"' have an unknown dependency: '\" + dependencyName + \"'\")\n            this.enqueueScheme(list, dependency, stack)\n        }\n\n        stack.pop()\n        list.push(scheme)\n    }\n\n    private async runSchemeList(list: BeelderScheme[]) {\n        for(let scheme of list) {\n            await scheme.run()\n        }\n    }\n\n    public resolveReference(reference: BeelderReference) {\n        let referencePath: string\n\n        if(reference.isDependency) {\n            let dependency = reference.getDependency()\n\n            let beelderReference = this.referenceMap.get(dependency)\n            if(!beelderReference) throw new Error(\"Failed to resolve reference: '\" + dependency + \"'\")\n\n            referencePath = beelderReference.path\n        } else {\n            referencePath = reference.path\n        }\n\n        referencePath = path.resolve(this.projectRoot, referencePath)\n\n        return referencePath\n    }\n\n    getAbsolutePath(file: string) {\n        return path.join(this.projectRoot, file)\n    }\n}\n\nBeelder.registerAction(BundleJavascriptAction)\nBeelder.registerAction(CopyAction)\nBeelder.registerAction(TextureAtlasAction)",
    "import {prepareFileLocation} from \"./utils\";\nimport fs from \"fs\"\nimport path from \"path\";\n\nexport type FileListCache = { [key: string]: {\n    modificationDate: number,\n    data?: any\n} | null}\n\nexport default class BuildCache {\n    sectionPath: string;\n    cacheFilePath: any;\n\n    constructor(sectionPath: string) {\n        this.sectionPath = sectionPath\n        this.cacheFilePath = path.join(this.sectionPath, \"section.json\")\n    }\n\n    getSection(section: string): BuildCache {\n        let sectionPath = path.join(this.sectionPath, section)\n\n        return new BuildCache(sectionPath)\n    }\n\n    async getJSON() {\n        if (!prepareFileLocation(this.cacheFilePath)) {\n            throw new Error(\"Impossible to create cache file\");\n        }\n\n        return await fs.promises.readFile(this.cacheFilePath, \"utf-8\").then((text) => {\n            return JSON.parse(text)\n        }).catch(async () => {\n            console.error(\"Cache file is missing or corrupted, clearing the cache\")\n            await fs.promises.writeFile(this.cacheFilePath, \"{}\")\n            return {}\n        })\n    }\n\n    async setJSON(json: any) {\n        if (!prepareFileLocation(this.cacheFilePath)) {\n            throw new Error(\"Impossible to create cache file\");\n        }\n\n        try {\n            let data = JSON.stringify(json)\n            await fs.promises.writeFile(this.cacheFilePath, data).catch((error) => {\n                console.error(\"Could not save cache file for section \" + this.sectionPath);\n                console.error(error.message)\n            })\n        } catch(error) {\n            console.error(\"Coult not save cache file\")\n            console.error(error.message)\n        }\n    }\n\n    static async fileRequiresRefresh(cache: FileListCache, fileName: string): Promise<boolean> {\n        let cacheEntry = cache[fileName];\n\n        if(!cacheEntry) return true\n\n        try { await fs.promises.access(fileName) }\n        catch(error) { return true}\n\n        let stats = await fs.promises.stat(fileName)\n\n        return cacheEntry.modificationDate < stats.mtime.getTime()\n    }\n\n    static getFileData(cache: FileListCache, fileName: string): any {\n        let cacheEntry = cache[fileName]\n        if(!cacheEntry) return null\n        return cacheEntry.data\n    }\n\n    static refreshFileData(cache: FileListCache, fileName: string): void\n    static refreshFileData(cache: FileListCache, fileName: string, data?: any) {\n        let cacheEntry = cache[fileName]\n        if (cacheEntry) {\n            cacheEntry.modificationDate = Date.now()\n            cacheEntry.data = data\n        } else {\n            cache[fileName] = {\n                modificationDate: Date.now(),\n                data: data\n            }\n        }\n    }\n}\n",
    "import Plugin from \"./plugin\"\nimport Babelify from 'babelify'\n// @ts-ignore\nimport incremental from \"browserify-incremental\"\nimport browserify from \"browserify\"\nimport exorcist from \"exorcist\"\nimport {prepareFileLocation} from \"../utils\";\nimport * as fs from \"fs\";\n\nexport interface BundlerConfig {\n    source: string;\n    destination: string;\n    projectRoot: string;\n\n    babelPresets?: any;\n    babelSourceType?: \"script\" | \"module\";\n    generateSourceMaps?: boolean;\n    debug?: boolean;\n    cacheFile?: string;\n    externalLibraries?: string[];\n}\n\nexport default class Bundler {\n    public readonly config: BundlerConfig;\n    public plugins: Plugin[] = [];\n    public babelify: (filename: string) => Babelify.BabelifyObject;\n    public browserify: browserify.BrowserifyObject;\n\n    constructor(config: BundlerConfig) {\n        this.config = config\n    }\n\n    plugin(plugin: Plugin) {\n        plugin.setCompiler(this)\n        this.plugins.push(plugin)\n        return this\n    }\n\n    private createBabelify(): (filename: string) => Babelify.BabelifyObject {\n        return Babelify.configure({\n            plugins: this.getBabelPluginList(),\n            presets: this.config.babelPresets ?? this.getDefaultBabelifyPresets(),\n            sourceMaps: this.config.generateSourceMaps,\n            sourceType: this.config.babelSourceType ?? \"module\",\n            extensions: ['.ts', '.js']\n        })\n    }\n\n    private createBrowserify() {\n        let config = Object.assign({}, incremental.args, {\n            paths: [this.config.projectRoot + \"/\"],\n            extensions: ['.ts'],\n            detectGlobals: false\n        })\n\n        let result = browserify(config, { debug: this.config.debug });\n\n        if(this.config.externalLibraries) {\n            for (let externalLibrary of this.config.externalLibraries) {\n                result.external(externalLibrary)\n            }\n        }\n\n        for(let plugin of this.plugins) {\n            let pluginList = plugin.getBrowserifyPlugins()\n\n            if(pluginList) for(let plugin of pluginList) {\n                result.plugin(plugin)\n            }\n        }\n\n        return result\n    }\n\n    private getDefaultBabelifyPresets() {\n        return [\n            ['@babel/preset-env', {\n                \"debug\": this.config.debug,\n                \"targets\": \"node 7\"\n            }]\n        ]\n    }\n\n    private emitPluginEvent(event: string) {\n        for(let plugin of this.plugins) {\n            plugin.emit(event);\n        }\n    }\n\n    async build() {\n        this.babelify = this.createBabelify()\n        this.browserify = this.createBrowserify()\n\n        this.emitPluginEvent(\"init\");\n\n        this.browserify.transform(this.babelify)\n        this.browserify.require(this.config.source, { entry: true })\n\n        this.emitPluginEvent(\"beforebuild\");\n\n        let wasError = await this.listen(this.browserify.bundle())\n\n        this.emitPluginEvent(\"afterbuild\");\n\n        if(wasError) {\n            throw new Error(\"Build finished with errors\")\n        }\n\n    }\n\n    private getBabelPluginList(): any[] {\n\n        // Default plugin list\n        let result: any[] = [\n            [\"@babel/plugin-syntax-class-properties\"],\n            [\"@babel/plugin-proposal-class-properties\", { loose: true }],\n            [\"@babel/plugin-transform-typescript\"],\n            [\"@babel/plugin-transform-runtime\"],\n        ]\n\n        for (let plugin of this.plugins) {\n            let babelPlugins = plugin.getBabelPlugins()\n            if (babelPlugins) result = result.concat(babelPlugins)\n        }\n\n        return result;\n    }\n\n    private listen(stream: NodeJS.ReadableStream): Promise<boolean> {\n        return new Promise<boolean>((resolve) => {\n            let errorHandler = (error: any) => {\n                console.error(error.message)\n                if(error.annotated) console.error(error.annotated)\n                resolve(true)\n            }\n\n            if(!prepareFileLocation(this.config.destination)) {\n                errorHandler(new Error(\"Cannot create parent directories for '\" + this.config.destination + \"'\"))\n            } else {\n                stream.on(\"error\", errorHandler)\n                stream = stream.pipe(this.getExorcist())\n                stream.on(\"error\", errorHandler)\n                let writeStream = fs.createWriteStream(this.config.destination)\n                stream.pipe(writeStream)\n                writeStream.on(\"error\", errorHandler)\n                writeStream.on(\"finish\", resolve)\n            }\n        })\n    }\n\n    private getExorcist() {\n        return exorcist(\n            this.config.destination + \".map\",\n            null,\n            this.config.projectRoot,\n            this.config.projectRoot\n        )\n    }\n}",
    "import Chalk from \"chalk\";\n\nexport type BeelderReferenceConfig = string & {\n    targetName?: string\n    path?: string\n\n}\n\nexport default class BeelderReference {\n    public readonly isDependency: boolean = false\n    public readonly definesTarget: boolean = false\n    public readonly path: string\n    public config: BeelderReferenceConfig;\n\n    constructor(config: BeelderReferenceConfig) {\n        this.config = config\n\n        if(typeof config === \"object\") {\n            if(config.targetName) {\n                if(config.path) this.definesTarget = true\n                else this.isDependency = true\n            }\n            this.path = config.path\n        } else {\n            this.path = config\n        }\n\n        if(!this.path) this.path = null\n    }\n\n    public getDependency(): string | null {\n        if(!this.isDependency) return null\n        return this.config.targetName\n    }\n\n    public getDefinedTarget(): string | null {\n        if(!this.definesTarget) return null\n        return this.config.targetName\n    }\n\n    public getPath(): string | null {\n        return this.path\n    }\n\n    public getConsoleName(): string {\n        if(this.definesTarget || this.isDependency) {\n            return Chalk.green(this.config.targetName)\n        } else {\n            return Chalk.blueBright(this.path)\n        }\n    }\n}",
    "import Beelder, {BeelderActionConfig} from \"./beelder\";\nimport BeelderAction from \"./action\";\nimport Timings from \"./timings\";\nimport Chalk from \"chalk\";\nimport BeelderReference from \"./reference\";\n\nexport interface BeelderSchemeConfig {\n    steps: [BeelderActionConfig]\n}\n\nexport default class BeelderScheme {\n\n    public steps: BeelderAction[] = []\n    private config: BeelderSchemeConfig;\n    public beelder: Beelder;\n    public name: string;\n    \n    constructor(name: string, config: BeelderSchemeConfig, beelder: Beelder) {\n        this.name = name\n        this.beelder = beelder\n        this.config = config\n        this.loadSteps()\n    }\n\n    private loadSteps() {\n        for(let step of this.config.steps) {\n            const ActionClass = Beelder.actions.get(step.action)\n            if(!ActionClass) throw new Error(\"No such action: '\" + step.action + \"'\")\n            const action = new ActionClass(step, this)\n            this.steps.push(action)\n        }\n    }\n\n    public getDependencies(): string[] {\n        let dependencies: string[] = []\n\n        for(let step of this.steps) {\n            const stepDependencies = step.getDependencies()\n            if(stepDependencies) {\n                for(let dep of stepDependencies) {\n                    dependencies.push(dep)\n                }\n            }\n        }\n\n        return dependencies\n    }\n\n    public getTargets(): BeelderReference[] {\n        let targets: BeelderReference[] = []\n\n        for(let step of this.steps) {\n            const stepTargets = step.getTargets()\n            if(stepTargets) {\n                for(let target of stepTargets) {\n                    targets.push(target)\n                }\n            }\n        }\n\n        return targets\n    }\n\n    public async run() {\n        let coloredSchemeName = Chalk.magenta(this.name)\n        Timings.begin(\"Running '\" + coloredSchemeName + \"'\")\n\n        for(let step of this.steps) {\n            await step.run()\n        }\n\n        Timings.end(\"Finished running '\" + coloredSchemeName + \"'\")\n    }\n}",
    "\nimport BeelderScheme from \"../scheme\";\nimport BaseAction, {BaseActionConfig} from \"../base-scheme\";\nimport Timings from \"../timings\";\nimport Bundler from \"../javascript-bundler/bundler\";\n\nexport interface BundleJavascriptActionConfig extends BaseActionConfig {\n    compilerOptions: any\n}\n\nexport default class BundleJavascriptAction extends BaseAction {\n\n    static readonly actionName: string = \"bundle-javascript\"\n    readonly compilerOptions: any;\n\n    constructor(config: BundleJavascriptActionConfig, scheme: BeelderScheme) {\n        super(config, scheme);\n        \n        this.compilerOptions = config.compilerOptions\n    }\n\n   async runCompiler() {\n\n        let source = this.scheme.beelder.resolveReference(this.source)\n        let destination = this.scheme.beelder.resolveReference(this.target)\n\n        let compilerOptions = {\n            source: source,\n            destination: destination,\n            cacheFile: this.cache.cacheFilePath,\n            projectRoot: this.scheme.beelder.projectRoot\n        }\n\n        if (this.compilerOptions) {\n            Object.assign(compilerOptions, this.compilerOptions)\n        }\n\n        let bundler = new Bundler(compilerOptions);\n\n        await bundler.build()\n\n    }\n\n    async run() {\n        let sourceName = this.source.getConsoleName();\n\n        Timings.begin(\"Building \" + sourceName)\n\n        await this.runCompiler()\n\n        Timings.end(\"Finished building \" + sourceName)\n    }\n}",
    "import BeelderScheme from \"../scheme\";\nimport BaseAction, {BaseActionConfig} from \"../base-scheme\";\n\nexport interface CopyActionConfig extends BaseActionConfig {\n    source: string\n    target: string\n}\n\nexport default class CopyAction extends BaseAction {\n\n    static readonly actionName: string = \"copy\"\n\n    constructor(config: CopyActionConfig, scheme: BeelderScheme) {\n        super(config, scheme);\n\n    }\n}",
    "\nimport BeelderScheme from \"../scheme\";\nimport BaseAction, {BaseActionConfig} from \"../base-scheme\";\n//@ts-ignore\nimport atlaspack from \"atlaspack\";\nimport Canvas from \"canvas\";\nimport fs from \"fs\"\nimport path from \"path\"\nimport Timings from \"../timings\";\nimport Chalk from \"chalk\";\nimport {readdirDeep, compareArrayValues, trimExtension, prepareDirectory} from \"../utils\"\nimport BuildCache, {FileListCache} from \"../build-cache\";\n\nexport interface TextureAtlasActionConfig extends BaseActionConfig {\n    atlasSize: number\n}\n\nexport interface AtlasCreationTexture {\n    name: string\n    image: Canvas.Image\n}\n\nexport class AtlasCreationSession {\n    imagePaths: string[]\n    \n    canvases: Canvas.Canvas[] = []\n    contexts: Canvas.CanvasRenderingContext2D[] = []\n    atlases: atlaspack.Atlas[] = []\n    atlasDescriptors: atlaspack.Rect[] = []\n    texturesRoot: string\n    atlasSize: number\n    texturesToPack: AtlasCreationTexture[]\n\n    constructor(texturesRoot: string, atlasSize: number) {\n        this.texturesRoot = texturesRoot\n        this.atlasSize = atlasSize\n    }\n\n    async readTextureList() {\n        this.imagePaths = (await readdirDeep(this.texturesRoot)).filter(file => file.endsWith(\".png\"))\n    }\n\n    async checkCacheRelevance(cache: TextureAtlasActionCache): Promise<boolean> {\n        if(!cache.directorySubtrees) return false\n        if(!cache.textureInfo) return false\n\n        let cachedSubtree = cache.directorySubtrees[this.texturesRoot]\n        if(!cachedSubtree) return false\n\n        if(!compareArrayValues(cachedSubtree, this.imagePaths)) return false\n\n        for(let imagePath of this.imagePaths) {\n            let absolutePath = path.join(this.texturesRoot, imagePath)\n            if(await BuildCache.fileRequiresRefresh(cache.textureInfo, absolutePath)) return false\n        }\n\n        return true\n    }\n\n    writeCache(cache: TextureAtlasActionCache) {\n        if(!cache.directorySubtrees) cache.directorySubtrees = {}\n        if(!cache.textureInfo) cache.textureInfo = {}\n\n        cache.directorySubtrees[this.texturesRoot] = this.imagePaths\n        for(let imagePath of this.imagePaths) {\n            let absolutePath = path.join(this.texturesRoot, imagePath)\n\n            BuildCache.refreshFileData(cache.textureInfo, absolutePath)\n        }\n    }\n\n    static webglRect(rect: atlaspack.Rect, canvas: Canvas.Canvas) {\n        return {\n            x: (rect.x + 1) / canvas.width,\n            y: (rect.y + 1) / canvas.height,\n            w: (rect.w - 2) / canvas.width,\n            h: (rect.h - 2) / canvas.height\n        }\n    }\n\n    createCanvases() {\n        let size = this.atlasSize\n        do {\n            let canvas = Canvas.createCanvas(size, size);\n            let ctx = canvas.getContext('2d');\n            let atlas = atlaspack(canvas);\n\n            atlas.tilepad = true\n\n            this.canvases.push(canvas)\n            this.contexts.push(ctx)\n            this.atlases.push(atlas)\n\n            size >>= 1\n        } while(size > 64)\n    }\n\n    drawTextures() {\n        for(let image of this.texturesToPack) {\n            let mipMapSize = this.atlasSize\n            let scale = 1\n\n            for(let j = 0; this.canvases[j]; j++) {\n                const rect = this.atlases[j].pack({\n                    width: image.image.width * scale + 2,\n                    height: image.image.height * scale + 2\n                }).rect;\n\n                if(!rect) {\n                    this.canvases[j] = null\n                    break\n                }\n\n                if(!this.atlasDescriptors[j]) this.atlasDescriptors[j] = {}\n                this.atlasDescriptors[j][image.name] = AtlasCreationSession.webglRect(rect, this.canvases[j])\n\n                AtlasCreationSession.drawTexture(this.canvases[j], this.contexts[j], image, rect)\n\n                mipMapSize >>= 1\n                scale /= 2\n            }\n        }\n    }\n\n    async readTextures() {\n        let textures: AtlasCreationTexture[] = []\n\n        await Promise.all(this.imagePaths.map(file => new Promise<void>((resolve, reject) => {\n            const image = new Canvas.Image();\n\n            image.onload = () => {\n                textures.push({\n                    name: trimExtension(file),\n                    image: image\n                })\n                resolve()\n            }\n\n            image.onerror = reject\n            image.src = path.resolve(this.texturesRoot, file)\n        })))\n\n        textures.sort((left, right) => {\n            return right.image.width * right.image.height - left.image.width * left.image.height\n        })\n\n        this.texturesToPack = textures\n    }\n\n    static drawTexture(canvas: Canvas.Canvas, ctx: Canvas.CanvasRenderingContext2D, img: AtlasCreationTexture, rect: atlaspack.Rect) {\n        // Internal\n        ctx.drawImage(img.image, rect.x + 1, rect.y + 1, rect.w - 2, rect.h - 2)\n\n        // Left\n        ctx.drawImage(canvas, rect.x + 1, rect.y + 1, 1, rect.h - 2, rect.x, rect.y + 1, 1, rect.h - 2)\n        // Right\n        ctx.drawImage(canvas, rect.x + rect.w - 2, rect.y + 1, 1, rect.h - 2, rect.x + rect.w - 1, rect.y + 1, 1, rect.h - 2)\n        // Top\n        ctx.drawImage(canvas, rect.x + 1, rect.y + 1, rect.w - 2, 1, rect.x + 1, rect.y, rect.w - 2, 1)\n        // Bottom\n        ctx.drawImage(canvas, rect.x + 1, rect.y + rect.h - 2, rect.w - 2, 1, rect.x + 1, rect.y + rect.h - 1, rect.w - 2, 1)\n\n        // Left-top\n        ctx.drawImage(canvas, rect.x + 1, rect.y + 1, 1, 1, rect.x, rect.y, 1, 1)\n        // Right-top\n        ctx.drawImage(canvas, rect.x + rect.w - 2, rect.y + 1, 1, 1, rect.x + rect.w - 1, rect.y, 1, 1)\n        // Left-bottom\n        ctx.drawImage(canvas, rect.x + 1, rect.y + rect.h - 2, 1, 1, rect.x, rect.y + rect.h - 1, 1, 1)\n        // Right-bottom\n        ctx.drawImage(canvas, rect.x + rect.w - 2, rect.y + rect.h - 2, 1, 1, rect.x + rect.w - 1, rect.y + rect.h - 1, 1, 1)\n    }\n\n    async writeTextures(destination: string) {\n        for(let j = 0; j < this.canvases.length; j++) {\n            if(!this.canvases[j]) break\n\n            await fs.promises.writeFile(path.resolve(destination, \"atlas-mipmap-level-\" + j + \".png\"), this.canvases[j].toBuffer());\n            await fs.promises.writeFile(path.resolve(destination, \"atlas-mipmap-level-\" + j + \".json\"), JSON.stringify(this.atlasDescriptors[j]));\n        }\n    }\n}\n\nexport interface TextureAtlasActionCache {\n    directorySubtrees: { [key: string]: string[] | null }\n    textureInfo: FileListCache\n}\n\nexport default class TextureAtlasAction extends BaseAction {\n\n    config: TextureAtlasActionConfig\n\n    static readonly actionName: string = \"texture-atlas\"\n\n    constructor(config: TextureAtlasActionConfig, scheme: BeelderScheme) {\n        super(config, scheme);\n        this.config = config\n    }\n\n    async run(): Promise<any> {\n\n        let source = path.join(this.scheme.beelder.projectRoot, this.source.getPath())\n        let destination = this.scheme.beelder.resolveReference(this.target)\n\n        if(!prepareDirectory(destination)) throw new Error(\"Unable to create destination folder\")\n\n        Timings.begin(\"Creating texture atlases of \" + Chalk.blueBright(this.config.source))\n\n        let cacheJSON = await this.cache.getJSON() as TextureAtlasActionCache\n\n        let context = new AtlasCreationSession(source, this.config.atlasSize)\n\n        Timings.begin(\"Reading directory\")\n        await context.readTextureList()\n        Timings.end()\n\n        Timings.begin(\"Checking cache\")\n        if(await context.checkCacheRelevance(cacheJSON)) {\n            Timings.end()\n            Timings.end(\"Textures has not been updated, used cached result\")\n            return\n        } else {\n            Timings.end(\"Textures has been updated, should refresh atlas\")\n        }\n\n        Timings.begin(\"Reading textures\")\n        await context.readTextures()\n        Timings.end()\n\n        Timings.begin(\"Allocating canvases\")\n        context.createCanvases()\n        Timings.end()\n\n        Timings.begin(\"Drawing atlases\")\n        context.drawTextures()\n        Timings.end()\n\n        Timings.begin(\"Writing atlases\")\n        await context.writeTextures(destination)\n        Timings.end()\n\n        Timings.begin(\"Saving caches\")\n        context.writeCache(cacheJSON)\n        await this.cache.setJSON(cacheJSON)\n        Timings.end()\n\n        Timings.end(\"Finished creating texture atlas\");\n    }\n}",
    "\nimport util from 'util'\nimport Chalk from 'chalk'\n\nclass Entry {\n    hasInlinedText: boolean\n    public date: number;\n    public title: string;\n\n    constructor(title: string) {\n        this.title = title\n        this.date = Date.now()\n        this.hasInlinedText = false\n    }\n}\n\nexport default class Timings {\n    private static mutedStackIndex?: number = null;\n\n    static stdoutWriteHandler?: (data: any) => boolean = null\n    static stderrWriteHandler?: (data: any) => boolean = null\n\n    static stdoutShouldLinefeed = false\n    static stdoutMarkMessage = false\n\n    static logPrefix: string = Chalk.yellow.bold(\"[ LOG ]\") + Chalk.gray(\": \")\n    static errPrefix: string = Chalk.red.bold(\"[ ERR ]\") + Chalk.gray(\": \")\n\n    static timingColor: Chalk.Chalk = Chalk.cyan\n\n    static stack: Entry[] = []\n\n    private static tab() {\n        return new Array(this.stack.length + 1).join(Chalk.gray(\"- \"))\n    }\n\n    static muteSubtasks() {\n        if(this.mutedStackIndex === null)\n            this.mutedStackIndex = this.stack.length\n    }\n\n    static unmuteSubtasks() {\n        if(this.stack.length === this.mutedStackIndex) this.mutedStackIndex = null\n    }\n\n    static begin(title: string) {\n        this.stdoutMarkMessage = false\n\n        if(this.stack.length === 0) {\n            this.bindStdout();\n        }\n\n        process.stdout.write(title + Chalk.gray(\":\"))\n\n        this.stdoutMarkMessage = true\n        this.stdoutShouldLinefeed = true\n\n        this.stack.push(new Entry(title))\n    }\n\n    static getStackState(): number {\n        return this.stack.length\n    }\n\n    static setStackState(length: number, reason?: string): void {\n        while(this.stack.length > length) {\n            if(reason) {\n                this.end(reason.replace(\"%s\", this.stack[this.stack.length - 1].title))\n            } else {\n                this.end()\n            }\n        }\n    }\n\n    static perform(title: string, task: () => void): void\n    static perform(title: string, task: () => Promise<void>): Promise<void>\n    static perform(title: string, task: (() => void) | (() => Promise<void>)): void | Promise<void> {\n        this.begin(title)\n\n        if(util.types.isAsyncFunction(task)) {\n            return (task() as Promise<void>).then(() => this.end())\n        }\n\n        task()\n        this.end()\n    }\n\n    static end(description?: string) {\n        if(this.stack.length === this.mutedStackIndex) this.mutedStackIndex = null\n        let task = this.stack.pop()\n\n        let time = ((Date.now() - task.date) / 1000).toFixed(3)\n\n        this.stdoutMarkMessage = false\n\n        if (task.hasInlinedText) {\n            if(!description) {\n                description = task.title\n            }\n            process.stdout.write(description + Chalk.gray(\": \") + this.timingColor(\"[\" + time + \"s]\"))\n            this.stdoutShouldLinefeed = true\n        } else {\n            this.stdoutShouldLinefeed = false\n            if(description) {\n                this.stdoutShouldLinefeed = false\n                process.stdout.write(\"\\r\\x1b[K\" + this.tab() + description + Chalk.gray(\":\"))\n            }\n            process.stdout.write(this.timingColor(\" [\" + time + \"s]\"))\n            this.stdoutShouldLinefeed = true\n        }\n\n        this.stdoutMarkMessage = true\n\n        if(this.stack.length === 0) {\n            this.unbindStdout();\n        }\n    }\n\n    static bindStdout() {\n        this.stdoutWriteHandler = process.stdout.write\n        this.stderrWriteHandler = process.stderr.write\n\n        process.stdout.write = (data: any): boolean => {\n            this.writeHandler(data, false)\n            return true\n        }\n\n        process.stderr.write = (data: any): boolean => {\n            this.writeHandler(data, true)\n            return true\n        }\n    }\n\n    private static writeHandler(text: string, isError: boolean) {\n\n        if(this.mutedStackIndex !== null) return\n\n        if(this.stack.length)\n            this.stack[this.stack.length - 1].hasInlinedText = true\n\n        if (this.stdoutShouldLinefeed) {\n            text = \"\\n\" + text;\n            this.stdoutShouldLinefeed = false;\n        } else if(this.stdoutMarkMessage) {\n            if (isError) text = this.errPrefix + text;\n            else         text = this.logPrefix + text;\n        }\n\n        if(text[text.length - 1] === \"\\n\") {\n            text = text.substr(0, text.length - 1)\n            this.stdoutShouldLinefeed = true\n        }\n\n        if(this.stdoutMarkMessage) {\n            text = text.replace(/\\n(?!$)/g, \"\\n\" + this.tab() + (isError ? this.errPrefix : this.logPrefix));\n        } else {\n            text = text.replace(/\\n/g, \"\\n\" + this.tab());\n        }\n\n        this.stdoutWriteHandler.call(process.stdout, text);\n    }\n\n    private static unbindStdout() {\n        process.stdout.write = this.stdoutWriteHandler\n        process.stderr.write = this.stderrWriteHandler\n\n        if(this.stdoutShouldLinefeed) {\n            process.stdout.write(\"\\n\")\n            this.stdoutShouldLinefeed = false\n        }\n    }\n}",
    "\nimport fs from \"fs\";\nimport path from \"path\";\n\nexport async function readdirDeep(directory: string): Promise<string[]>\nexport async function readdirDeep(directory: string, array: string[], base: string): Promise<string[]>\nexport async function readdirDeep(directory: string, array: string[] = [], base: string = \"\"): Promise<string[]> {\n\n    if (!array) array = []\n    if (!base) base = \"\"\n\n    if (fs.statSync(directory).isDirectory()) {\n        await fs.readdirSync(directory).map(async file => {\n            let item = path.join(directory, file)\n            let subbase = path.join(base, file)\n            array.push(subbase)\n\n            await readdirDeep(item, array, subbase)\n        })\n    }\n    return array\n}\n\nexport function trimExtension(fileName: string): string {\n    const fragments = fileName.split(\".\");\n    if(fragments.length > 1) fragments.pop()\n    return fragments.join(\".\")\n}\n\nexport function prepareDirectory(directory: string): boolean {\n    try {\n        fs.accessSync(directory)\n    } catch(e) {\n        try {\n            fs.mkdirSync(directory, {recursive: true})\n        } catch(e) {\n            return false\n        }\n    }\n\n    return true\n}\n\nexport function prepareFileLocation(filePath: string): boolean {\n    let directoryPath = path.dirname(filePath)\n    try {\n        fs.accessSync(directoryPath)\n    } catch(e) {\n        try {\n            fs.mkdirSync(directoryPath, {recursive: true})\n        } catch(e) {\n            return false\n        }\n    }\n\n    return true\n}\n\nexport function compareArrayValues(arr1: any[], arr2: any[]): boolean {\n    let dictionary = new Map<any, number>()\n\n    for(let element of arr1) dictionary.set(element, 1)\n    for(let element of arr2) {\n        let existed = dictionary.get(element)\n        if(!existed) return false\n        dictionary.set(element, 2)\n    }\n\n    for(let value of dictionary.values()) {\n        if(value === 1) return false\n    }\n\n    return true\n}",
    "\nimport Timings from './timings'; export { Timings }\nimport Beelder from \"./beelder\"; export { Beelder }"
  ]
}